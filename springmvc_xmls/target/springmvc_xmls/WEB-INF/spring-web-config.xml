<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd ">

	<context:component-scan base-package="springmvc_xmls" />

	
	<!-- BeanNameUrlHandlerMapping example -->
	<!--  No need to mention as it default handler mapping -->
	<!-- <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/> -->
	<!-- <bean name="/welcome.htm" class="springmvc_xmls.HelloWorldController" ></bean>
	
	<bean name="/process*.htm" class="springmvc_xmls.HelloWorldController"></bean>
	 -->
	<!-- ControllerClassNameHandlerMapping example -->
	<!-- <bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping"></bean>
	<bean class="springmvc_xmls.HelloWorldController"></bean>
	 -->
	<!-- To set case sensitivity and path prefix in ControllerMapping -->
	<!-- <bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping">
		<property name="caseSensitive" value="true"></property>
	</bean> -->
	
	<!-- SimpleUrlHandlerMapping example - Give it a try -->
	
	
	<bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping">
	</bean>
	
	<bean class="springmvc_xmls.EmployeeController">
		<!-- <property name="methodNameResolver">
			<bean class="org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver">
				<property name="prefix" value="test"></property>
				<property name="suffix" value="customer"></property>
			</bean>
			<bean class="org.springframework.web.servlet.mvc.multiaction.ParameterMethodNameResolver">
	   			<property name="paramName" value="action"/>
			</bean>
		</property> -->
	</bean>
	
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/views/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- <bean class="org.springframework.web.servlet.view.XmlViewResolver">
	   <property name="location">
	       <value>/WEB-INF/spring-views.xml</value>
	   </property>
	   <property name="order" value="1"></property>
	</bean> -->

	<!-- There is one more way ResourceBundleViewResolver which loads views.properties and works same way
		set basename property to modify file name
		for example
		employee.(class)=org.srpingframework.web.servlet.view.JstlView
		employee.url=/WEB-INF/views/jsp/employee.jsp
	 -->

	<mvc:annotation-driven />

</beans>